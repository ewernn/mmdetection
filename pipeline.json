{
    "pipeline": {
        "input": [
            "img"
        ],
        "output": [
            "post_output"
        ],
        "tasks": [
            {
                "type": "Task",
                "module": "Transform",
                "name": "Preprocess",
                "input": [
                    "img"
                ],
                "output": [
                    "prep_output"
                ],
                "transforms": [
                    {
                        "type": "LoadImageFromFile"
                    },
                    {
                        "type": "Normalize",
                        "to_rgb": true,
                        "mean": [
                            123.675,
                            116.28,
                            103.53
                        ],
                        "std": [
                            58.395,
                            57.12,
                            57.375
                        ]
                    },
                    {
                        "type": "Pad",
                        "size_divisor": 32
                    },
                    {
                        "type": "DefaultFormatBundle"
                    },
                    {
                        "type": "MultiScaleFlipAug",
                        "transforms": [
                            {
                                "type": "Normalize",
                                "mean": [
                                    113.76166347104252,
                                    113.76166347104252,
                                    113.76166347104252
                                ],
                                "std": [
                                    75.57327894366065,
                                    75.57327894366065,
                                    75.57327894366065
                                ],
                                "to_rgb": true
                            },
                            {
                                "type": "Pad",
                                "size_divisor": 32
                            },
                            {
                                "type": "ImageToTensor",
                                "keys": [
                                    "img"
                                ]
                            },
                            {
                                "type": "Collect",
                                "keys": [
                                    "img"
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "name": "fasterrcnn",
                "type": "Task",
                "module": "Net",
                "is_batched": false,
                "input": [
                    "prep_output"
                ],
                "output": [
                    "infer_output"
                ],
                "input_map": {
                    "img": "input"
                },
                "output_map": {}
            },
            {
                "type": "Task",
                "module": "mmdet",
                "name": "postprocess",
                "component": "ResizeBBox",
                "params": {
                    "rpn": {
                        "nms_pre": 1000,
                        "max_per_img": 1000,
                        "nms": {
                            "type": "nms",
                            "iou_threshold": 0.7
                        },
                        "min_bbox_size": 0
                    },
                    "rcnn": {
                        "score_thr": 0.05,
                        "nms": {
                            "type": "nms",
                            "iou_threshold": 0.5
                        },
                        "max_per_img": 100
                    },
                    "min_bbox_size": 0,
                    "score_thr": 0.05
                },
                "output": [
                    "post_output"
                ],
                "input": [
                    "prep_output",
                    "infer_output"
                ]
            }
        ]
    }
}